#注意rootLogger的级别
# log4j.rootLogger=value 是根据log4j.appender.errorfile的键的最后一个字符串来配置的,infofile是后面配置的键有自己的值log4j.appender.infofile=
log4j.rootLogger=INFO,stdout,infofile,errorfile,debugfile
#控制台日志
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out 
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{ISO8601}][%p]%l: %m%n

#INFO级别日志
#每天形成一个日志
log4j.appender.infofile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.infofile.Append=true
#当前时间以前的日志为cmri_2019-03-08.log
log4j.appender.infofile.DatePattern='_'yyyy-MM-dd'.log'
#当前时间日志为cmri.log
#该路径的根路径为
log4j.appender.infofile.File=${catalina.home}/logs/hello/cmri.log
#这里的相对路径和webapps在同一级
#log4j.appender.infofile.File=logssss/info.log
log4j.appender.infofile.Threshold=INFO
log4j.appender.infofile.Encoding=UTF-8
log4j.appender.infofile.layout=org.apache.log4j.PatternLayout
#日志输出的格式，该格式为[时间][java类]代码行数：日志
log4j.appender.infofile.layout.ConversionPattern=[%d{ISO8601}][%p]%l: %m%n
 
#ERROR级别的日志
log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.errorfile.Append=true
log4j.appender.errorfile.DatePattern='_'yyyy-MM-dd-HH-mm'.log'
log4j.appender.errorfile.File=${catalina.base}/logs/hello/error/cmri_error.log
#这里的相对路径和webapps在同一级
#log4j.appender.errorfile.File=logsssss/error.log
log4j.appender.errorfile.Threshold=ERROR
log4j.appender.errorfile.Encoding=UTF-8
log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
log4j.appender.errorfile.layout.ConversionPattern=[%d{ISO8601}][%p]%l: %m%n

#DEBUG级别的日志
log4j.appender.debugfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.debugfile.Append=true
log4j.appender.debugfile.DatePattern='_'yyyy-MM-dd-HH-mm'.log'
log4j.appender.debugfile.File=${catalina.base}/logs/hello/debug/cmri_debug.log
#这里的相对路径和webapps在同一级
#log4j.appender.debugfile.File=logssll/debug.log
log4j.appender.debugfile.Threshold=DEBUG
log4j.appender.debugfile.Encoding=UTF-8
log4j.appender.debugfile.layout=org.apache.log4j.PatternLayout
log4j.appender.debugfile.layout.ConversionPattern=[%d{ISO8601}][%p]%l: %m%n

